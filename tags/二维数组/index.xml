<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>二维数组 on 月霜天</title>
    <link>https://betterfor.github.io/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</link>
    <description>Recent content in 二维数组 on 月霜天</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 08 Feb 2021 10:14:18 +0800</lastBuildDate><atom:link href="https://betterfor.github.io/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二维数组按行和按列遍历的效率</title>
      <link>https://betterfor.github.io/2021/02/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E9%81%8D%E5%8E%86%E6%95%88%E7%8E%87/</link>
      <pubDate>Mon, 08 Feb 2021 10:14:18 +0800</pubDate>
      
      <guid>https://betterfor.github.io/2021/02/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E9%81%8D%E5%8E%86%E6%95%88%E7%8E%87/</guid>
      <description>二维数组的排列顺序 数组在内存中是按行存储的，按行遍历时可以由指向数组的第一个数的指针一直向后遍历，由于二维数组的内存地址是连续的，当前行的尾和下一行的头相邻。
用代码来打印数组的地址。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  func main() { var a int32 fmt.Println(unsafe.Sizeof(a)) n := 4 array := generateArray(n) for i := 0; i &amp;lt; n; i++ { fmt.Printf(&amp;#34;%p \n&amp;#34;,array[i]) } } func generateArray(n int) [][]int32 { var arr = make([][]int32,n) for i := 0; i &amp;lt; n; i++ { arr[i] = make([]int32,n) for j := 0; j &amp;lt; n; j++ { arr[i][j] = 1 } } return arr } // Output: 4 0xc0000a0090 0xc0000a00a0 0xc0000a00b0 0xc0000a00c0    int32占用4个字节，4个int32占用16个字节，这与我们得到一个数组的地址是对应的。</description>
    </item>
    
  </channel>
</rss>
