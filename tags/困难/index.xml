<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>困难 on 风落云起</title>
    <link>https://betterfor.github.io/tags/%E5%9B%B0%E9%9A%BE/</link>
    <description>Recent content in 困难 on 风落云起</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 05 Feb 2021 20:05:03 +0800</lastBuildDate><atom:link href="https://betterfor.github.io/tags/%E5%9B%B0%E9%9A%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LEETCODE 004. 寻找两个正序数组的中位数</title>
      <link>https://betterfor.github.io/2021/02/004/</link>
      <pubDate>Fri, 05 Feb 2021 20:05:03 +0800</pubDate>
      
      <guid>https://betterfor.github.io/2021/02/004/</guid>
      <description>力扣百题系列
 今天给大家带来一道关于数组的难题。
题目 给定两个大小为m和n的正序（从小到大）数组nums1和nums2。返回这两个正序数组合并后的中位数。
暴力法 将两个正序数组合并成一个正序数组，然后再求中位数，似乎是一个方法。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  func findMedianSortedArrays(nums1 []int, nums2 []int) float64 { n1,n2 := len(nums1),len(nums2) nums := make([]int,n1+n2) // 将两个数组合并 	var idx,i,j int for idx &amp;lt; n1+n2 { if i == n1 { for j &amp;lt; n2 { nums[idx] = nums2[j] j++ idx++ } break } if j == n2 { for i &amp;lt; n1 { nums[idx] =nums1[i] i++ idx++ } break } if nums1[i] &amp;lt; nums2[j] { nums[idx] = nums1[i] i++ } else { nums[idx] = nums2[j] j++ } idx++ } if cnt := n1 + n2; cnt%2 == 0 { return float64(nums[cnt/2-1]+nums[cnt/2])/2.</description>
    </item>
    
    <item>
      <title>LEETCODE 480. 滑动窗口中位数</title>
      <link>https://betterfor.github.io/2021/02/480/</link>
      <pubDate>Wed, 03 Feb 2021 20:22:04 +0800</pubDate>
      
      <guid>https://betterfor.github.io/2021/02/480/</guid>
      <description>大家好，我是沉迷于刷题的小耗。
今天给大家带来的是力扣480题：滑动窗口中位数
题目 中位数是有序序列最中间的那个数。如果序列的长度是偶数，则没有最中间的数，此时中位数是最中间的两个数的平均数。
给你一个数组nums，有一个长度为k的窗口从最左端滑动到最右端。窗口中有k个数，每次窗口向右移动1位。你的任务是找出每次窗口移动后得到的新元素的中位数，并输出它们组成的数组。
示例 给出nums = [1,3,-1,-3,5,3,6,7]，以及k = 3。
窗口位置 中位数
 [1 3 -1] -3 5 3 6 7 1 1 [3 -1 -3] 5 3 6 7 -1 1 3 [-1 -3 5] 3 6 7 -1 1 3 -1 [-3 5 3] 6 7 3 1 3 -1 -3 [5 3 6] 7 5 1 3 -1 -3 5 [3 6 7] 6
题解 看到这里，停顿一下，思考一下。</description>
    </item>
    
  </channel>
</rss>
